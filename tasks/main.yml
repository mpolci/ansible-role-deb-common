---

- name: authorized ssh keys for user root
  authorized_key: user=root key={{ item }}
  with_items: "{{ authorized_ssh_keys }}"
  register: add_identity_key
  tags: ssh-keys

- name: Disable ssh password login
  lineinfile: dest=/etc/ssh/sshd_config regexp="^#?PasswordAuthentication" line="PasswordAuthentication no"
  when: add_identity_key|success and authorized_ssh_keys
  notify: restart sshd
  tags: ssh-keys

- name: Enable ssh password login
  lineinfile: dest=/etc/ssh/sshd_config regexp="^#?PasswordAuthentication" line="PasswordAuthentication yes"
  when: not authorized_ssh_keys
  notify: restart sshd
  tags: ssh-keys

- name: "aptitude package"
  apt: name=aptitude state=present
  when: do_upgrade is defined
  tags: packages

- name: "dist upgrade"
  apt: update_cache=yes upgrade=dist force=yes
  when:  do_upgrade == 'dist'
  tags: packages

- name: "normal upgrade"
  apt: update_cache=yes upgrade=safe force=yes
  when: do_upgrade == "yes"
  tags: packages

- name: .bashrc
  copy: src=files/.bashrc dest=/root/.bashrc owner=root group=root mode=0644
  when: ansible_distribution == 'Debian'

# Security settings

- set_fact: ssh_port={{ ansible_ssh_port | default('ssh') }}

- name: ufw package
  apt: name=ufw state=present
  tags: packages

- name: firewall/ssh limit policy from gateways
  ufw: rule=limit port={{ ssh_port }} from={{ item }}
  with_items: "{{ limit_ssh_from }}"
  tags: firewall

- name: firewall/ssh delete policy from all
  ufw: rule=limit port={{ ssh_port }} delete=yes
  when: "{{ limit_ssh_from | count > 0 }}"
  tags: firewall

- name: firewall/ssh limit policy from all
  ufw: rule=limit port={{ ssh_port }}
  when: "{{ limit_ssh_from | count == 0 }}"
  tags: firewall

- ufw: direction=outgoing policy=allow
  tags: firewall

- ufw: state=enabled direction=incoming policy=deny
  tags: firewall

- name: firewall extra tcp ports
  ufw: rule=allow port={{ item }}
  with_items: "{{ allow_tcp_ports }}"
  tags: firewall

- name: firewall extra tcp ports from restricted sources
  ufw: rule=allow port={{ item.0.port }} from={{ item.1 }}
  with_subelements:
    - "{{ allow_tcp_ports_from }}"
    - from
  tags: firewall

# packages

- name: extra packages
  apt: name={{ item }}
  tags: packages
  with_items: "{{ packages | default([]) }}"

# system settings

- name: journald persistent storage
  ini_file:
    dest: /etc/systemd/journald.conf
    section: Journal
    option: Storage
    value: persistent

- hostname: name={{inventory_hostname}}

# nrpe installation

- include: nrpe.yml
  when: icinga_server is defined
  tags: [nrpe, monitoring]

# forward syslog

- name: "rsyslog configuration to forward logs"
  template: src=rsyslog_forward.conf.j2 dest=/etc/rsyslog.d/90-forward.conf
  when: syslog_forward_to is defined and (syslog_forward_to | trim != "") and not (syslog_forward_to is none)
  notify:
    - reload rsyslog
  tags: [syslog, monitoring]

